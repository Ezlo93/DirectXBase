//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights;        // Offset:    0, size:   64
    float3  gEyePosW;                   // Offset:   64, size:   12
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    float4x4 gTexTransform;             // Offset:  192, size:   64
    float4x4 gShadowTransform;          // Offset:  256, size:   64
    Material gMaterial;                 // Offset:  320, size:   64
    float4  gStaticColor;               // Offset:  384, size:   16
}

//
// 4 local object(s)
//
Texture2D gDiffuseMap;
Texture2D gShadowMap;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(16);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
SamplerComparisonState samShadow
{
    Filter   = uint(COMPARISON_MIN_MAG_LINEAR_MIP_POINT /* 148 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    AddressW = uint(BORDER /* 4 */);
    BorderColor = float4(0, 0, 0, 0);
    ComparisonFunc = uint(LESS /* 2 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 5 technique(s)
    //
    technique11 BasicTextureTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //   float4 gStaticColor;               // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float   xyz 
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                // TEXCOORD                 1   xyzw        5     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer CB0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o5.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.NormalL.x; v2.y <- vin.NormalL.y; v2.z <- vin.NormalL.z; 
                //   v3.x <- vin.TangentU.x; v3.y <- vin.TangentU.y; v3.z <- vin.TangentU.z; 
                //   o5.x <- <VS return value>.ShadowPosH.x; o5.y <- <VS return value>.ShadowPosH.y; o5.z <- <VS return value>.ShadowPosH.z; o5.w <- <VS return value>.ShadowPosH.w; 
                //   o4.x <- <VS return value>.Tex.x; o4.y <- <VS return value>.Tex.y; 
                //   o3.x <- <VS return value>.TangentW.x; o3.y <- <VS return value>.TangentW.y; o3.z <- <VS return value>.TangentW.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 67 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                
                #line 71
                dp4 o0.x, r0.xyzw, cb0[8].xyzw
                dp4 o0.y, r0.xyzw, cb0[9].xyzw
                dp4 o0.z, r0.xyzw, cb0[10].xyzw
                dp4 o0.w, r0.xyzw, cb0[11].xyzw
                
                #line 67
                dp4 o1.x, r0.xyzw, cb0[0].xyzw
                dp4 o1.y, r0.xyzw, cb0[1].xyzw
                dp4 o1.z, r0.xyzw, cb0[2].xyzw
                
                #line 68
                dp3 o2.x, v2.xyzx, cb0[4].xyzx
                dp3 o2.y, v2.xyzx, cb0[5].xyzx
                dp3 o2.z, v2.xyzx, cb0[6].xyzx
                
                #line 69
                dp3 o3.x, v3.xyzx, cb0[0].xyzx
                dp3 o3.y, v3.xyzx, cb0[1].xyzx
                dp3 o3.z, v3.xyzx, cb0[2].xyzx
                
                #line 74
                mov r1.xy, v1.xyxx
                mov r1.z, l(1.000000)
                dp3 o4.x, r1.xyzx, cb0[12].xywx
                dp3 o4.y, r1.xyzx, cb0[13].xywx
                
                #line 77
                dp4 o5.x, r0.xyzw, cb0[16].xyzw
                dp4 o5.y, r0.xyzw, cb0[17].xyzw
                dp4 o5.z, r0.xyzw, cb0[18].xyzw
                dp4 o5.w, r0.xyzw, cb0[19].xyzw
                
                #line 79
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights;                      // Offset:    0 Size:    64
                //   float3 gEyePosW;                   // Offset:   64 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //   float4 gStaticColor;               // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samAnisotropic                    sampler      NA          NA             s0      1 
                // samShadow                       sampler_c      NA          NA             s1      1 
                // gDiffuseMap                       texture  float4          2d             t0      1 
                // gShadowMap                        texture  float4          2d             t1      1 
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float       
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                // TEXCOORD                 1   xyzw        5     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer CB0[5], immediateIndexed
                dcl_constantbuffer CB1[23], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.TangentW.x; v3.y <- pin.TangentW.y; v3.z <- pin.TangentW.z; 
                //   v4.x <- pin.Tex.x; v4.y <- pin.Tex.y; 
                //   v5.x <- pin.ShadowPosH.x; v5.y <- pin.ShadowPosH.y; v5.z <- pin.ShadowPosH.z; v5.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 102 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s0  // r0.x <- texColor.x; r0.y <- texColor.y; r0.z <- texColor.z; r0.w <- texColor.w
                
                #line 103
                add r1.x, r0.w, l(-0.100000)
                lt r1.x, r1.x, l(0.000000)
                discard_nz r1.x
                
                #line 234 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\LightHelper.fx"
                div r1.xyz, v5.xyzx, v5.wwww  // r1.x <- shadowPosH.x; r1.y <- shadowPosH.y; r1.z <- shadowPosH.z
                
                #line 253
                add r2.xyzw, r1.xyxy, l(-0.000122, -0.000122, 0.000000, -0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r1.z  // r1.w <- percentLit
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r1.z
                add r1.w, r1.w, r2.x
                add r2.xyzw, r1.xyxy, l(0.000122, -0.000122, -0.000122, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t1.xxxx, s1, r1.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.y, r2.zwzz, t1.xxxx, s1, r1.z
                add r1.w, r1.w, r2.x
                add r1.w, r2.y, r1.w
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r1.xyxx, t1.xxxx, s1, r1.z
                add r1.w, r1.w, r2.x
                add r2.xyzw, r1.xyxy, l(0.000122, 0.000000, -0.000122, 0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t1.xxxx, s1, r1.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.y, r2.zwzz, t1.xxxx, s1, r1.z
                add r1.w, r1.w, r2.x
                add r1.w, r2.y, r1.w
                add r2.xyzw, r1.xyxy, l(0.000000, 0.000122, 0.000122, 0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r1.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r1.z
                add r1.x, r1.x, r1.w  // r1.x <- percentLit
                add r1.x, r1.y, r1.x
                
                #line 257
                mul r1.x, r1.x, l(0.111111)
                
                #line 89 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                add r1.yzw, -v1.xxyz, cb0[4].xxyz  // r1.y <- toEye.x; r1.z <- toEye.y; r1.w <- toEye.z
                
                #line 92
                dp3 r2.x, r1.yzwy, r1.yzwy
                sqrt r2.x, r2.x  // r2.x <- distToEye
                
                #line 95
                div r1.yzw, r1.yyzw, r2.xxxx
                
                #line 86
                dp3 r2.x, v2.xyzx, v2.xyzx
                rsq r2.x, r2.x
                mul r2.xyz, r2.xxxx, v2.xyzx  // r2.x <- pin.NormalW.x; r2.y <- pin.NormalW.y; r2.z <- pin.NormalW.z
                
                #line 84 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\LightHelper.fx"
                dp3 r2.w, cb0[3].xyzx, r2.xyzx
                add r2.w, r2.w, r2.w
                mad r3.xyz, r2.xyzx, -r2.wwww, cb0[3].xyzx  // r3.x <- v.x; r3.y <- v.y; r3.z <- v.z
                
                #line 78
                dp3 r2.x, -cb0[3].xyzx, r2.xyzx  // r2.x <- diffuseFactor
                
                #line 85
                dp3 r1.y, r3.xyzx, r1.yzwy
                max r1.y, r1.y, l(0.000000)
                log r1.y, r1.y
                mul r1.y, r1.y, cb1[22].w
                exp r1.y, r1.y  // r1.y <- specFactor
                
                #line 88
                mul r1.yzw, r1.yyyy, cb1[22].xxyz
                mul r1.yzw, r1.yyzw, cb0[2].xxyz  // r1.y <- spec.x; r1.z <- spec.y; r1.w <- spec.z
                
                #line 82
                lt r2.y, l(0.000000), r2.x
                
                #line 87
                mul r2.xzw, r2.xxxx, cb1[21].xxyz
                mul r2.xzw, r2.xxzw, cb0[1].xxyz  // r2.x <- diffuse.x; r2.z <- diffuse.y; r2.w <- diffuse.z
                
                #line 89
                and r2.xzw, r2.xxzw, r2.yyyy
                and r1.yzw, r1.yyzw, r2.yyyy
                
                #line 146 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                mul r1.yzw, r1.yyzw, r1.xxxx  // r1.y <- spec.x; r1.z <- spec.y; r1.w <- spec.z
                
                #line 145
                mul r2.xyz, r1.xxxx, r2.xzwx  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z
                
                #line 149
                mad r2.xyz, cb1[20].xyzx, cb0[0].xyzx, r2.xyzx
                mad o0.xyz, r0.xyzx, r2.xyzx, r1.yzwy
                
                #line 152
                mul o0.w, r0.w, cb1[21].w
                
                #line 154
                ret 
                // Approximately 56 instruction slots used
                            
            };
        }

    }

    technique11 BasicNoTextureTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //   float4 gStaticColor;               // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float   xyz 
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                // TEXCOORD                 1   xyzw        5     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer CB0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o5.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.NormalL.x; v2.y <- vin.NormalL.y; v2.z <- vin.NormalL.z; 
                //   v3.x <- vin.TangentU.x; v3.y <- vin.TangentU.y; v3.z <- vin.TangentU.z; 
                //   o5.x <- <VS return value>.ShadowPosH.x; o5.y <- <VS return value>.ShadowPosH.y; o5.z <- <VS return value>.ShadowPosH.z; o5.w <- <VS return value>.ShadowPosH.w; 
                //   o4.x <- <VS return value>.Tex.x; o4.y <- <VS return value>.Tex.y; 
                //   o3.x <- <VS return value>.TangentW.x; o3.y <- <VS return value>.TangentW.y; o3.z <- <VS return value>.TangentW.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 67 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                
                #line 71
                dp4 o0.x, r0.xyzw, cb0[8].xyzw
                dp4 o0.y, r0.xyzw, cb0[9].xyzw
                dp4 o0.z, r0.xyzw, cb0[10].xyzw
                dp4 o0.w, r0.xyzw, cb0[11].xyzw
                
                #line 67
                dp4 o1.x, r0.xyzw, cb0[0].xyzw
                dp4 o1.y, r0.xyzw, cb0[1].xyzw
                dp4 o1.z, r0.xyzw, cb0[2].xyzw
                
                #line 68
                dp3 o2.x, v2.xyzx, cb0[4].xyzx
                dp3 o2.y, v2.xyzx, cb0[5].xyzx
                dp3 o2.z, v2.xyzx, cb0[6].xyzx
                
                #line 69
                dp3 o3.x, v3.xyzx, cb0[0].xyzx
                dp3 o3.y, v3.xyzx, cb0[1].xyzx
                dp3 o3.z, v3.xyzx, cb0[2].xyzx
                
                #line 74
                mov r1.xy, v1.xyxx
                mov r1.z, l(1.000000)
                dp3 o4.x, r1.xyzx, cb0[12].xywx
                dp3 o4.y, r1.xyzx, cb0[13].xywx
                
                #line 77
                dp4 o5.x, r0.xyzw, cb0[16].xyzw
                dp4 o5.y, r0.xyzw, cb0[17].xyzw
                dp4 o5.z, r0.xyzw, cb0[18].xyzw
                dp4 o5.w, r0.xyzw, cb0[19].xyzw
                
                #line 79
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights;                      // Offset:    0 Size:    64
                //   float3 gEyePosW;                   // Offset:   64 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //   float4 gStaticColor;               // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samShadow                       sampler_c      NA          NA             s0      1 
                // gShadowMap                        texture  float4          2d             t0      1 
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float       
                // TEXCOORD                 0   xy          4     NONE   float       
                // TEXCOORD                 1   xyzw        5     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer CB0[5], immediateIndexed
                dcl_constantbuffer CB1[23], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 3
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.TangentW.x; v3.y <- pin.TangentW.y; v3.z <- pin.TangentW.z; 
                //   v4.x <- pin.Tex.x; v4.y <- pin.Tex.y; 
                //   v5.x <- pin.ShadowPosH.x; v5.y <- pin.ShadowPosH.y; v5.z <- pin.ShadowPosH.z; v5.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 234 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\LightHelper.fx"
                div r0.xyz, v5.xyzx, v5.wwww  // r0.x <- shadowPosH.x; r0.y <- shadowPosH.y; r0.z <- shadowPosH.z
                
                #line 253
                add r1.xyzw, r0.xyxy, l(-0.000122, -0.000122, 0.000000, -0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t0.xxxx, s0, r0.z  // r0.w <- percentLit
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.zwzz, t0.xxxx, s0, r0.z
                add r0.w, r0.w, r1.x
                add r1.xyzw, r0.xyxy, l(0.000122, -0.000122, -0.000122, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xxxx, s0, r0.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t0.xxxx, s0, r0.z
                add r0.w, r0.w, r1.x
                add r0.w, r1.y, r0.w
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r0.xyxx, t0.xxxx, s0, r0.z
                add r0.w, r0.w, r1.x
                add r1.xyzw, r0.xyxy, l(0.000122, 0.000000, -0.000122, 0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xxxx, s0, r0.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t0.xxxx, s0, r0.z
                add r0.w, r0.w, r1.x
                add r0.w, r1.y, r0.w
                add r1.xyzw, r0.xyxy, l(0.000000, 0.000122, 0.000122, 0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r1.xyxx, t0.xxxx, s0, r0.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r1.zwzz, t0.xxxx, s0, r0.z
                add r0.x, r0.x, r0.w  // r0.x <- percentLit
                add r0.x, r0.y, r0.x
                
                #line 257
                mul r0.x, r0.x, l(0.111111)
                
                #line 89 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                add r0.yzw, -v1.xxyz, cb0[4].xxyz  // r0.y <- toEye.x; r0.z <- toEye.y; r0.w <- toEye.z
                
                #line 92
                dp3 r1.x, r0.yzwy, r0.yzwy
                sqrt r1.x, r1.x  // r1.x <- distToEye
                
                #line 95
                div r0.yzw, r0.yyzw, r1.xxxx
                
                #line 86
                dp3 r1.x, v2.xyzx, v2.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v2.xyzx  // r1.x <- pin.NormalW.x; r1.y <- pin.NormalW.y; r1.z <- pin.NormalW.z
                
                #line 84 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\LightHelper.fx"
                dp3 r1.w, cb0[3].xyzx, r1.xyzx
                add r1.w, r1.w, r1.w
                mad r2.xyz, r1.xyzx, -r1.wwww, cb0[3].xyzx  // r2.x <- v.x; r2.y <- v.y; r2.z <- v.z
                
                #line 78
                dp3 r1.x, -cb0[3].xyzx, r1.xyzx  // r1.x <- diffuseFactor
                
                #line 85
                dp3 r0.y, r2.xyzx, r0.yzwy
                max r0.y, r0.y, l(0.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, cb1[22].w
                exp r0.y, r0.y  // r0.y <- specFactor
                
                #line 88
                mul r0.yzw, r0.yyyy, cb1[22].xxyz
                mul r0.yzw, r0.yyzw, cb0[2].xxyz  // r0.y <- spec.x; r0.z <- spec.y; r0.w <- spec.z
                
                #line 82
                lt r1.y, l(0.000000), r1.x
                
                #line 87
                mul r1.xzw, r1.xxxx, cb1[21].xxyz
                mul r1.xzw, r1.xxzw, cb0[1].xxyz  // r1.x <- diffuse.x; r1.z <- diffuse.y; r1.w <- diffuse.z
                
                #line 89
                and r1.xzw, r1.xxzw, r1.yyyy
                and r0.yzw, r0.yyzw, r1.yyyy
                
                #line 145 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                mul r1.xyz, r0.xxxx, r1.xzwx  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z
                
                #line 149
                mad r1.xyz, cb1[20].xyzx, cb0[0].xyzx, r1.xyzx
                mad o0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
                
                #line 154
                mov o0.w, cb1[21].w
                ret 
                // Approximately 51 instruction slots used
                            
            };
        }

    }

    technique11 BasicTextureNoLighting
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //   float4 gStaticColor;               // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float   xyz 
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                // TEXCOORD                 1   xyzw        5     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer CB0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o5.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.NormalL.x; v2.y <- vin.NormalL.y; v2.z <- vin.NormalL.z; 
                //   v3.x <- vin.TangentU.x; v3.y <- vin.TangentU.y; v3.z <- vin.TangentU.z; 
                //   o5.x <- <VS return value>.ShadowPosH.x; o5.y <- <VS return value>.ShadowPosH.y; o5.z <- <VS return value>.ShadowPosH.z; o5.w <- <VS return value>.ShadowPosH.w; 
                //   o4.x <- <VS return value>.Tex.x; o4.y <- <VS return value>.Tex.y; 
                //   o3.x <- <VS return value>.TangentW.x; o3.y <- <VS return value>.TangentW.y; o3.z <- <VS return value>.TangentW.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 67 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                
                #line 71
                dp4 o0.x, r0.xyzw, cb0[8].xyzw
                dp4 o0.y, r0.xyzw, cb0[9].xyzw
                dp4 o0.z, r0.xyzw, cb0[10].xyzw
                dp4 o0.w, r0.xyzw, cb0[11].xyzw
                
                #line 67
                dp4 o1.x, r0.xyzw, cb0[0].xyzw
                dp4 o1.y, r0.xyzw, cb0[1].xyzw
                dp4 o1.z, r0.xyzw, cb0[2].xyzw
                
                #line 68
                dp3 o2.x, v2.xyzx, cb0[4].xyzx
                dp3 o2.y, v2.xyzx, cb0[5].xyzx
                dp3 o2.z, v2.xyzx, cb0[6].xyzx
                
                #line 69
                dp3 o3.x, v3.xyzx, cb0[0].xyzx
                dp3 o3.y, v3.xyzx, cb0[1].xyzx
                dp3 o3.z, v3.xyzx, cb0[2].xyzx
                
                #line 74
                mov r1.xy, v1.xyxx
                mov r1.z, l(1.000000)
                dp3 o4.x, r1.xyzx, cb0[12].xywx
                dp3 o4.y, r1.xyzx, cb0[13].xywx
                
                #line 77
                dp4 o5.x, r0.xyzw, cb0[16].xyzw
                dp4 o5.y, r0.xyzw, cb0[17].xyzw
                dp4 o5.z, r0.xyzw, cb0[18].xyzw
                dp4 o5.w, r0.xyzw, cb0[19].xyzw
                
                #line 79
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //   float4 gStaticColor;               // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samAnisotropic                    sampler      NA          NA             s0      1 
                // gDiffuseMap                       texture  float4          2d             t0      1 
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float       
                // TANGENT                  0   xyz         3     NONE   float       
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                // TEXCOORD                 1   xyzw        5     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer CB0[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.TangentW.x; v3.y <- pin.TangentW.y; v3.z <- pin.TangentW.z; 
                //   v4.x <- pin.Tex.x; v4.y <- pin.Tex.y; 
                //   v5.x <- pin.ShadowPosH.x; v5.y <- pin.ShadowPosH.y; v5.z <- pin.ShadowPosH.z; v5.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 102 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s0  // r0.x <- texColor.x; r0.y <- texColor.y; r0.z <- texColor.z; r0.w <- texColor.w
                
                #line 103
                add r0.w, r0.w, l(-0.100000)
                
                #line 115
                mov o0.xyz, r0.xyzx
                
                #line 103
                lt r0.x, r0.w, l(0.000000)
                discard_nz r0.x
                
                #line 115
                mov o0.w, cb0[21].w
                ret 
                // Approximately 7 instruction slots used
                            
            };
        }

    }

    technique11 BasicStaticColor
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //   float4 gStaticColor;               // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float   xyz 
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                // TEXCOORD                 1   xyzw        5     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer CB0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o5.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.NormalL.x; v2.y <- vin.NormalL.y; v2.z <- vin.NormalL.z; 
                //   v3.x <- vin.TangentU.x; v3.y <- vin.TangentU.y; v3.z <- vin.TangentU.z; 
                //   o5.x <- <VS return value>.ShadowPosH.x; o5.y <- <VS return value>.ShadowPosH.y; o5.z <- <VS return value>.ShadowPosH.z; o5.w <- <VS return value>.ShadowPosH.w; 
                //   o4.x <- <VS return value>.Tex.x; o4.y <- <VS return value>.Tex.y; 
                //   o3.x <- <VS return value>.TangentW.x; o3.y <- <VS return value>.TangentW.y; o3.z <- <VS return value>.TangentW.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 67 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                
                #line 71
                dp4 o0.x, r0.xyzw, cb0[8].xyzw
                dp4 o0.y, r0.xyzw, cb0[9].xyzw
                dp4 o0.z, r0.xyzw, cb0[10].xyzw
                dp4 o0.w, r0.xyzw, cb0[11].xyzw
                
                #line 67
                dp4 o1.x, r0.xyzw, cb0[0].xyzw
                dp4 o1.y, r0.xyzw, cb0[1].xyzw
                dp4 o1.z, r0.xyzw, cb0[2].xyzw
                
                #line 68
                dp3 o2.x, v2.xyzx, cb0[4].xyzx
                dp3 o2.y, v2.xyzx, cb0[5].xyzx
                dp3 o2.z, v2.xyzx, cb0[6].xyzx
                
                #line 69
                dp3 o3.x, v3.xyzx, cb0[0].xyzx
                dp3 o3.y, v3.xyzx, cb0[1].xyzx
                dp3 o3.z, v3.xyzx, cb0[2].xyzx
                
                #line 74
                mov r1.xy, v1.xyxx
                mov r1.z, l(1.000000)
                dp3 o4.x, r1.xyzx, cb0[12].xywx
                dp3 o4.y, r1.xyzx, cb0[13].xywx
                
                #line 77
                dp4 o5.x, r0.xyzw, cb0[16].xyzw
                dp4 o5.y, r0.xyzw, cb0[17].xyzw
                dp4 o5.z, r0.xyzw, cb0[18].xyzw
                dp4 o5.w, r0.xyzw, cb0[19].xyzw
                
                #line 79
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLights;                      // Offset:    0 Size:    64
                //   float3 gEyePosW;                   // Offset:   64 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //   float4 gStaticColor;               // Offset:  384 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samShadow                       sampler_c      NA          NA             s0      1 
                // gShadowMap                        texture  float4          2d             t0      1 
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float       
                // TEXCOORD                 0   xy          4     NONE   float       
                // TEXCOORD                 1   xyzw        5     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer CB0[5], immediateIndexed
                dcl_constantbuffer CB1[25], immediateIndexed
                dcl_sampler s0, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 3
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.TangentW.x; v3.y <- pin.TangentW.y; v3.z <- pin.TangentW.z; 
                //   v4.x <- pin.Tex.x; v4.y <- pin.Tex.y; 
                //   v5.x <- pin.ShadowPosH.x; v5.y <- pin.ShadowPosH.y; v5.z <- pin.ShadowPosH.z; v5.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 234 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\LightHelper.fx"
                div r0.xyz, v5.xyzx, v5.wwww  // r0.x <- shadowPosH.x; r0.y <- shadowPosH.y; r0.z <- shadowPosH.z
                
                #line 253
                add r1.xyzw, r0.xyxy, l(-0.000122, -0.000122, 0.000000, -0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t0.xxxx, s0, r0.z  // r0.w <- percentLit
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.zwzz, t0.xxxx, s0, r0.z
                add r0.w, r0.w, r1.x
                add r1.xyzw, r0.xyxy, l(0.000122, -0.000122, -0.000122, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xxxx, s0, r0.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t0.xxxx, s0, r0.z
                add r0.w, r0.w, r1.x
                add r0.w, r1.y, r0.w
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r0.xyxx, t0.xxxx, s0, r0.z
                add r0.w, r0.w, r1.x
                add r1.xyzw, r0.xyxy, l(0.000122, 0.000000, -0.000122, 0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xxxx, s0, r0.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t0.xxxx, s0, r0.z
                add r0.w, r0.w, r1.x
                add r0.w, r1.y, r0.w
                add r1.xyzw, r0.xyxy, l(0.000000, 0.000122, 0.000122, 0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.x, r1.xyxx, t0.xxxx, s0, r0.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.y, r1.zwzz, t0.xxxx, s0, r0.z
                add r0.x, r0.x, r0.w  // r0.x <- percentLit
                add r0.x, r0.y, r0.x
                
                #line 257
                mul r0.x, r0.x, l(0.111111)
                
                #line 89 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                add r0.yzw, -v1.xxyz, cb0[4].xxyz  // r0.y <- toEye.x; r0.z <- toEye.y; r0.w <- toEye.z
                
                #line 92
                dp3 r1.x, r0.yzwy, r0.yzwy
                sqrt r1.x, r1.x  // r1.x <- distToEye
                
                #line 95
                div r0.yzw, r0.yyzw, r1.xxxx
                
                #line 86
                dp3 r1.x, v2.xyzx, v2.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v2.xyzx  // r1.x <- pin.NormalW.x; r1.y <- pin.NormalW.y; r1.z <- pin.NormalW.z
                
                #line 84 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\LightHelper.fx"
                dp3 r1.w, cb0[3].xyzx, r1.xyzx
                add r1.w, r1.w, r1.w
                mad r2.xyz, r1.xyzx, -r1.wwww, cb0[3].xyzx  // r2.x <- v.x; r2.y <- v.y; r2.z <- v.z
                
                #line 78
                dp3 r1.x, -cb0[3].xyzx, r1.xyzx  // r1.x <- diffuseFactor
                
                #line 85
                dp3 r0.y, r2.xyzx, r0.yzwy
                max r0.y, r0.y, l(0.000000)
                log r0.y, r0.y
                mul r0.y, r0.y, cb1[22].w
                exp r0.y, r0.y  // r0.y <- specFactor
                
                #line 88
                mul r0.yzw, r0.yyyy, cb1[22].xxyz
                mul r0.yzw, r0.yyzw, cb0[2].xxyz  // r0.y <- spec.x; r0.z <- spec.y; r0.w <- spec.z
                
                #line 82
                lt r1.y, l(0.000000), r1.x
                
                #line 87
                mul r1.xzw, r1.xxxx, cb1[21].xxyz
                mul r1.xzw, r1.xxzw, cb0[1].xxyz  // r1.x <- diffuse.x; r1.z <- diffuse.y; r1.w <- diffuse.z
                
                #line 89
                and r1.xzw, r1.xxzw, r1.yyyy
                and r0.yzw, r0.yyzw, r1.yyyy
                
                #line 146 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                mul r0.yzw, r0.yyzw, r0.xxxx  // r0.y <- spec.x; r0.z <- spec.y; r0.w <- spec.z
                
                #line 145
                mul r1.xyz, r0.xxxx, r1.xzwx  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z
                
                #line 149
                mad r1.xyz, cb1[20].xyzx, cb0[0].xyzx, r1.xyzx
                mad o0.xyz, cb1[24].xyzx, r1.xyzx, r0.yzwy
                
                #line 152
                mul o0.w, cb1[21].w, cb1[24].w
                
                #line 154
                ret 
                // Approximately 52 instruction slots used
                            
            };
        }

    }

    technique11 BasicOnlyShadow
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //   float4 gStaticColor;               // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // TANGENT                  0   xyz         3     NONE   float   xyz 
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                // TEXCOORD                 1   xyzw        5     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer CB0[20], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input v2.xyz
                dcl_input v3.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o5.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   v1.x <- vin.Tex.x; v1.y <- vin.Tex.y; 
                //   v2.x <- vin.NormalL.x; v2.y <- vin.NormalL.y; v2.z <- vin.NormalL.z; 
                //   v3.x <- vin.TangentU.x; v3.y <- vin.TangentU.y; v3.z <- vin.TangentU.z; 
                //   o5.x <- <VS return value>.ShadowPosH.x; o5.y <- <VS return value>.ShadowPosH.y; o5.z <- <VS return value>.ShadowPosH.z; o5.w <- <VS return value>.ShadowPosH.w; 
                //   o4.x <- <VS return value>.Tex.x; o4.y <- <VS return value>.Tex.y; 
                //   o3.x <- <VS return value>.TangentW.x; o3.y <- <VS return value>.TangentW.y; o3.z <- <VS return value>.TangentW.z; 
                //   o2.x <- <VS return value>.NormalW.x; o2.y <- <VS return value>.NormalW.y; o2.z <- <VS return value>.NormalW.z; 
                //   o1.x <- <VS return value>.PosW.x; o1.y <- <VS return value>.PosW.y; o1.z <- <VS return value>.PosW.z; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 67 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                
                #line 71
                dp4 o0.x, r0.xyzw, cb0[8].xyzw
                dp4 o0.y, r0.xyzw, cb0[9].xyzw
                dp4 o0.z, r0.xyzw, cb0[10].xyzw
                dp4 o0.w, r0.xyzw, cb0[11].xyzw
                
                #line 67
                dp4 o1.x, r0.xyzw, cb0[0].xyzw
                dp4 o1.y, r0.xyzw, cb0[1].xyzw
                dp4 o1.z, r0.xyzw, cb0[2].xyzw
                
                #line 68
                dp3 o2.x, v2.xyzx, cb0[4].xyzx
                dp3 o2.y, v2.xyzx, cb0[5].xyzx
                dp3 o2.z, v2.xyzx, cb0[6].xyzx
                
                #line 69
                dp3 o3.x, v3.xyzx, cb0[0].xyzx
                dp3 o3.y, v3.xyzx, cb0[1].xyzx
                dp3 o3.z, v3.xyzx, cb0[2].xyzx
                
                #line 74
                mov r1.xy, v1.xyxx
                mov r1.z, l(1.000000)
                dp3 o4.x, r1.xyzx, cb0[12].xywx
                dp3 o4.y, r1.xyzx, cb0[13].xywx
                
                #line 77
                dp4 o5.x, r0.xyzw, cb0[16].xyzw
                dp4 o5.y, r0.xyzw, cb0[17].xyzw
                dp4 o5.z, r0.xyzw, cb0[18].xyzw
                dp4 o5.w, r0.xyzw, cb0[19].xyzw
                
                #line 79
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gShadowTransform;         // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //   float4 gStaticColor;               // Offset:  384 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // samAnisotropic                    sampler      NA          NA             s0      1 
                // samShadow                       sampler_c      NA          NA             s1      1 
                // gDiffuseMap                       texture  float4          2d             t0      1 
                // gShadowMap                        texture  float4          2d             t1      1 
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float       
                // TANGENT                  0   xyz         3     NONE   float       
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                // TEXCOORD                 1   xyzw        5     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer CB0[22], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_sampler s1, mode_comparison
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v4.xy
                dcl_input_ps linear v5.xyzw
                dcl_output o0.xyzw
                dcl_temps 3
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.PosW.x; v1.y <- pin.PosW.y; v1.z <- pin.PosW.z; 
                //   v2.x <- pin.NormalW.x; v2.y <- pin.NormalW.y; v2.z <- pin.NormalW.z; 
                //   v3.x <- pin.TangentW.x; v3.y <- pin.TangentW.y; v3.z <- pin.TangentW.z; 
                //   v4.x <- pin.Tex.x; v4.y <- pin.Tex.y; 
                //   v5.x <- pin.ShadowPosH.x; v5.y <- pin.ShadowPosH.y; v5.z <- pin.ShadowPosH.z; v5.w <- pin.ShadowPosH.w; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 102 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s0  // r0.x <- texColor.x; r0.y <- texColor.y; r0.z <- texColor.z; r0.w <- texColor.w
                
                #line 103
                add r0.w, r0.w, l(-0.100000)
                lt r0.w, r0.w, l(0.000000)
                discard_nz r0.w
                
                #line 234 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\LightHelper.fx"
                div r1.xyz, v5.xyzx, v5.wwww  // r1.x <- shadowPosH.x; r1.y <- shadowPosH.y; r1.z <- shadowPosH.z
                
                #line 253
                add r2.xyzw, r1.xyxy, l(-0.000122, -0.000122, 0.000000, -0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t1.xxxx, s1, r1.z  // r0.w <- percentLit
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t1.xxxx, s1, r1.z
                add r0.w, r0.w, r1.w
                add r2.xyzw, r1.xyxy, l(0.000122, -0.000122, -0.000122, 0.000000)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r1.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r1.z
                add r0.w, r0.w, r1.w
                add r0.w, r2.x, r0.w
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r1.xyxx, t1.xxxx, s1, r1.z
                add r0.w, r0.w, r1.w
                add r2.xyzw, r1.xyxy, l(0.000122, 0.000000, -0.000122, 0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t1.xxxx, s1, r1.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t1.xxxx, s1, r1.z
                add r0.w, r0.w, r1.w
                add r0.w, r2.x, r0.w
                add r2.xyzw, r1.xyxy, l(0.000000, 0.000122, 0.000122, 0.000122)
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t1.xxxx, s1, r1.z
                sample_c_lz_indexable(texture2d)(float,float,float,float) r1.y, r2.zwzz, t1.xxxx, s1, r1.z
                add r0.w, r0.w, r1.x
                add r0.w, r1.y, r0.w
                
                #line 257
                mul r0.w, r0.w, l(0.111111)
                
                #line 112 "C:\Users\n_seh\source\repos\DirectXBase\data\shader\basictexture.fx"
                mul o0.xyz, r0.wwww, r0.xyzx
                mul o0.w, r0.w, cb0[21].w
                
                #line 115
                ret 
                // Approximately 30 instruction slots used
                            
            };
        }

    }

}

